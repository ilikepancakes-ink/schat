import { NextRequest, NextResponse } from 'next/server';
import { validateSession } from '@/lib/auth';
import { getVulnerabilityScan } from '@/lib/vulnerability-scanner';

export const runtime = 'nodejs';

// GET /api/security/vulnerability-scans/[id] - Get vulnerability scan results
export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const token = request.cookies.get('auth-token')?.value;
    
    if (!token) {
      return NextResponse.json({
        success: false,
        error: 'Authentication required',
      }, { status: 401 });
    }

    const authResult = await validateSession(token);
    if (!authResult.valid || !authResult.user) {
      return NextResponse.json({
        success: false,
        error: 'Invalid session',
      }, { status: 401 });
    }

    const scanId = params.id;

    const result = await getVulnerabilityScan(scanId, authResult.user.id);

    if (!result.success) {
      return NextResponse.json({
        success: false,
        error: result.error,
      }, { status: result.error === 'Access denied' ? 403 : 404 });
    }

    return NextResponse.json({
      success: true,
      scan: result.scan
    });

  } catch (error) {
    console.error('Error getting vulnerability scan:', error);
    return NextResponse.json({
      success: false,
      error: 'Internal server error',
    }, { status: 500 });
  }
}
